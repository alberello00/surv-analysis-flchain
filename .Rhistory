data("flchain")
univariate_km = function(var) {
surv_object <- Surv(futime, death)
result_km <- survfit(surv_object ~ var, conf.type = "log-log")
return(result_km)
}
age_death = univariate_km(age)
sex_death - univariate_km(sex)
age_death = univariate_km(age)
sex_death = univariate_km(sex)
sample.yr_death = univariate_km(sample.yr)
flc.grp_death = univariate_km(flc.grp)
creatinine_death = univariate_km(creatinine)
mgus_death = univariate_km(mgus)
futime_death = univariate_km(futime)
futime_death = univariate_km(futime)
plot(futime_death,col='black', lty = 1, xlab = "futime", ylab = "estimated S(t)", main = 'Survival function as a function of futime')
chapter_death = univariate_km(chapter)
plot(chapter_death,col='black', lty = 1, xlab = "futime", ylab = "estimated S(t)", main = 'Survival function as a function of futime')
agecl <- cut(age, quantile(age), include.lowest =  T)
table(agecl)
sample.yr_death
sample.yr
age_death = univariate_km(age_quantile)
age_quantile <- cut(age, quantile(age), include.lowest =  T)
age_death = univariate_km(age_quantile)
plot(age_death,col='black', lty = 1, xlab = "age", ylab = "estimated S(t)", main = 'Survival function as a function of age')
plot(age_death,col='black', col = c('red', 'blue', 'black', 'green'),lty = 1, xlab = "age", ylab = "estimated S(t)", main = 'Survival function as a function of age')
plot(age_death, col = c('red', 'blue', 'black', 'green'), lty = 1:2, xlab = "age", ylab = "estimated S(t)", main = 'Survival function as a function of age')
legend("topright", legend = c("[50,55)", "[55,63)", "[63, 72)", "[72, 101)"), lty = 1:2, col = c('red', 'blue', 'black', 'green'))
legend("bottomleft", legend = c("[50,55)", "[55,63)", "[63, 72)", "[72, 101)"), lty = 1:2, col = c('red', 'blue', 'black', 'green'))
plot(age_death, col = c('red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of age quantiles')
legend("bottomleft", legend = c("[50,55)", "[55,63)", "[63, 72)", "[72, 101)"), lty = 1:2, col = c('red', 'blue', 'black', 'green'))
sample.yr
range(sample.yr)
table(sample.yr)
sample.yr_death = univariate_km(sample.yr)
quntile(sample.yr)
quantile(sample.yr)
cut(sample.yr, quantile(sample.yr), include.lowest =  T)
plot(sample.yr_death, col = c('red', 'blue', 'black', 'green', 'red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of age quantiles')
legend("bottomleft", legend = c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003 ), col = c('red', 'blue', 'black', 'green', 'red', 'blue', 'black', 'green'), lty = 1:2)
plot(sample.yr_death, col = c('red', 'blue', 'black', 'green', 'red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of age quantiles')
legend("bottom", legend = c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003 ), col = c('red', 'blue', 'black', 'green', 'red', 'blue', 'black', 'green'), lty = 1:2)
legend("bottomleft", legend = c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003 ), col = c('red', 'blue', 'black', 'green', 'red', 'blue', 'black', 'green'), lty = 1:1)
legend("bottomleft", legend = c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003 ), col = c('red', 'blue', 'black', 'green', 'red', 'blue', 'black', 'green'), lty = 0.5:1)
plot(sample.yr_death, col = c('red', 'blue', 'black', 'green', 'red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of age quantiles')
legend("bottomleft", legend = c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003 ), col = c('red', 'blue', 'black', 'green', 'red', 'blue', 'black', 'green'), lty = 0.5:1)
plot(sample.yr_death, col = c('red', 'blue', 'black', 'green', 'red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of age quantiles')
legend("bottomleft", legend = c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003 ), col = c('red', 'blue', 'black', 'green', 'red', 'blue', 'black', 'green'), lty = 1:1)
# sex
sex_death = univariate_km(sex)
# sex
sex_death = univariate_km(sex)
plot(sex_death, col = c('red', 'blue'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of sex')
plot(sex_death, col = c('red', 'blue'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of sex' ylim=c(0.5, 1))
plot(sex_death, col = c('red', 'blue'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of sex', ylim=c(0.5, 1))
plot(sex_death, col = c('red', 'blue'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of sex', ylim=c(0.65, 1))
legend("bottomleft", legend = c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003 ), col = c('red', 'blue', 'black', 'green', 'red', 'blue', 'black', 'green'), lty = 1:1)
legend("bottomleft", legend = c('M', 'F'), col = c('red', 'blue'), lty = 1:2)
plot(sex_death, col = c('red', 'blue'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of sex', ylim=c(0.65, 1))
legend("bottomleft", legend = c('M', 'F'), col = c('red', 'blue'), lty = 1:2)
legend("bottomleft", legend = c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003 ), col = c('red', 'blue', 'black', 'green', 'red', 'blue', 'black', 'green'), lty = 1:1)plot(sex_death, col = c('red', 'blue'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of sex', ylim=c(0.65, 1))
# sample.yr
sample.yr_death = univariate_km(sample.yr)
plot(sample.yr_death, col = c('red', 'blue', 'black', 'green', 'red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of sample.yr quantiles')
legend("bottomleft", legend = c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003 ), col = c('red', 'blue', 'black', 'green', 'red', 'blue', 'black', 'green'), lty = 1:1, horiz=T)
legend("bottomleft", legend = c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003 ), col = c('red', 'blue', 'black', 'green', 'red', 'blue', 'black', 'green'), lty = 1:2, horiz=T)
plot(sample.yr_death, col = c('red', 'blue', 'black', 'green', 'red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of sample.yr quantiles')
legend("bottomleft", legend = c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003 ), col = c('red', 'blue', 'black', 'green', 'red', 'blue', 'black', 'green'), lty = 1:2, horiz=T)
legend("bottomleft", legend = c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003 ), col = c('red', 'blue', 'black', 'green', 'red', 'blue', 'black', 'green'), lty = 1:2, horiz=T, cex = 0.3)
legend("bottomleft", legend = c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003 ), col = c('red', 'blue', 'black', 'green', 'red', 'blue', 'black', 'green'), lty = 1:2, horiz=T, cex = 0.7)
legend("bottomleft", legend = c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003 ), col = c('red', 'blue', 'black', 'green', 'red', 'blue', 'black', 'green'), lty = 1:2, horiz=T, cex = 0.5)
legend("bottomleft", legend = c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003 ), col = c('red', 'blue', 'black', 'green', 'red', 'blue', 'black', 'green'), lty = 1:2, horiz=T, cex = 0.6)
plot(sample.yr_death, col = c('red', 'blue', 'black', 'green', 'red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of sample.yr quantiles', ylim=c(0.65,1))
legend("bottomleft", legend = c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003 ), col = c('red', 'blue', 'black', 'green', 'red', 'blue', 'black', 'green'), lty = 1:2, horiz=T, cex = 0.6)
plot(sample.yr_death, col = c('red', 'blue', 'black', 'green', 'red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of sample.yr quantiles', ylim=c(0.60,1))
legend("bottomleft", legend = c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003 ), col = c('red', 'blue', 'black', 'green', 'red', 'blue', 'black', 'green'), lty = 1:2, horiz=T, cex = 0.6)
# sex
sex_death = univariate_km(sex)
plot(sex_death, col = c('red', 'blue'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of sex', ylim=c(0.65, 1))
legend("bottomleft", legend = c('M', 'F'), col = c('red', 'blue'), lty = 1:2)
legend("bottomleft", legend = c('M', 'F'), col = c('red', 'blue'), lty = 1:2, horiz = T)
plot(sex_death, col = c('red', 'blue'), lty = 1:2, xlab = "follow up time", yla
b = "estimated S(t)", main = 'Survival function as a function of sex', ylim=c(0.65, 1))
plot(sex_death, col = c('red', 'blue'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of sex', ylim=c(0.65, 1))
legend("bottomleft", legend = c('M', 'F'), col = c('red', 'blue'), lty = 1:2, horiz = T)
flc.grp
table(flc.grp)
# flc.gpr
flc.grp_death = univariate_km(flc.grp)
plot(flc.grp_death, col = c('red', 'blue', 'black', 'green', 'purple', 'red', 'blue', 'black', 'green', 'purple'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of flc.grp', ylim=c(0.65, 1))
plot(flc.grp_death, col = c('red', 'blue', 'black', 'green', 'purple', 'red', 'blue', 'black', 'green', 'purple'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of flc.grp', ylim=c(0.5, 1))
legend("bottomleft", legend = c('M', 'F'), col = c('red', 'blue'), lty = 1:2, horiz = T)
plot(flc.grp_death, col = c('red', 'blue', 'black', 'green', 'purple', 'red', 'blue', 'black', 'green', 'purple'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of flc.grp', ylim=c(0.4, 1))
plot(flc.grp_death, col = c('red', 'blue', 'black', 'green', 'purple', 'red', 'blue', 'black', 'green', 'purple'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of flc.grp', ylim=c(0.3, 1))
plot(flc.grp_death, col = c('red', 'blue', 'black', 'green', 'purple', 'red', 'blue', 'black', 'green', 'purple'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of flc.grp', ylim=c(0.2, 1))
plot(flc.grp_death, col = c('red', 'blue', 'black', 'green', 'purple', 'red', 'blue', 'black', 'green', 'purple'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of flc.grp', ylim=c(0.2, 1))
legend("bottomleft", legend = c(1,2,3,4,5,6,7,8,9,10), col = c('red', 'blue', 'black', 'green', 'purple', 'red', 'blue', 'black', 'green', 'purple'), lty = 1:2, horiz = T)
legend("bottomleft", legend = c(1,2,3,4,5,6,7,8,9,10), col = c('red', 'blue', 'black', 'green', 'purple', 'red', 'blue', 'black', 'green', 'purple'), lty = 1:2, horiz = T, cex = 0.4)
legend("bottomleft", legend = c(1,2,3,4,5,6,7,8,9,10), col = c('red', 'blue', 'black', 'green', 'purple', 'red', 'blue', 'black', 'green', 'purple'), lty = 1:2, horiz = T, cex = 0.3)
legend("bottomleft", legend = c(1,2,3,4,5,6,7,8,9,10), col = c('red', 'blue', 'black', 'green', 'purple', 'red', 'blue', 'black', 'green', 'purple'), lty = 1:2, horiz = T, cex = 0.5)
plot(flc.grp_death, col = c('red', 'blue', 'black', 'green', 'purple', 'red', 'blue', 'black', 'green', 'purple'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of flc.grp', ylim=c(0.2, 1))
legend("bottomleft", legend = c(1,2,3,4,5,6,7,8,9,10), col = c('red', 'blue', 'black', 'green', 'purple', 'red', 'blue', 'black', 'green', 'purple'), lty = 1:2, horiz = T, cex = 0.5)
plot(flc.grp_death, col = c('red', 'blue', 'black', 'green', 'purple', 'red', 'blue', 'black', 'green', 'purple'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of flc.grp', ylim=c(0.2, 1))
legend("bottomleft", legend = c(1,2,3,4,5,6,7,8,9,10), col = c('red', 'blue', 'black', 'green', 'purple', 'red', 'blue', 'black', 'green', 'purple'), lty = 1:2, horiz = T, cex = 0.6)
plot(flc.grp_death, col = c('red', 'blue', 'black', 'green', 'purple', 'red', 'blue', 'black', 'green', 'purple'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of flc.grp', ylim=c(0.2, 1))
legend("bottom", legend = c(1,2,3,4,5,6,7,8,9,10), col = c('red', 'blue', 'black', 'green', 'purple', 'red', 'blue', 'black', 'green', 'purple'), lty = 1:2, horiz = T, cex = 0.6)
plot(flc.grp_death, col = c('red', 'blue', 'black', 'green', 'purple', 'red', 'blue', 'black', 'green', 'purple'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of flc.grp', ylim=c(0.2, 1))
legend("bottom", legend = c(1,2,3,4,5,6,7,8,9,10), col = c('red', 'blue', 'black', 'green', 'purple', 'red', 'blue', 'black', 'green', 'purple'), lty = 1:2, horiz = T, cex = 0.65)
table(creatinine)
# creatinine
creatinine_quanitle = cut(creatinine, quantile(creatinine), include.lowest =  T)
# creatinine
creatinine_quanitle = cut(creatinine, quantile(creatinine), include.lowest =  T, na.rm = T)
# creatinine
creatinine_quanitle = cut(creatinine, quantile(creatinine), include.lowest =  T, na.action = na.rm)
# creatinine
creatinine_quanitle = cut(creatinine, quantile(creatinine, na.action = na.rm), include.lowest =  T)
# creatinine
creatinine_quanitle = cut(creatinine, quantile(creatinine, na.rm = T), include.lowest =  T)
creatinine_death = univariate_km(creatinine_quanitle)
creatinine_quanitle
# creatinine
#  [0.4,0.9] (0.9,1] (1,1.2] (1.2,10.8]
creatinine_quanitle = cut(creatinine, quantile(creatinine, na.rm = T), include.lowest =  T)
creatinine_death = univariate_km(creatinine_quanitle)
plot(creatinine_death, col = c('red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of creatinine', ylim=c(0.2, 1))
plot(creatinine_death, col = c('red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of creatinine', ylim=c(0.4, 1))
plot(creatinine_death, col = c('red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of creatinine', ylim=c(0.4, 1))
legend("bottomleft", legend = c("[0.4,0.9]", "(0.9,1]", "(1,1.2]", "(1.2,10.8]"), col = c('red', 'blue', 'black', 'green'), lty = 1:2, horiz = T, cex = 0.65)
legend("bottomleft", legend = c("[0.4,0.9]", "(0.9,1]", "(1,1.2]", "(1.2,10.8]"), col = c('red', 'blue', 'black', 'green'), lty = 1:2, horiz = T, cex = 0.7)
legend("bottomleft", legend = c("[0.4,0.9]", "(0.9,1]", "(1,1.2]", "(1.2,10.8]"), col = c('red', 'blue', 'black', 'green'), lty = 1:2, horiz = T, cex = 0.8)
creatinine_death = univariate_km(creatinine_quanitle)
plot(creatinine_death, col = c('red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of creatinine', ylim=c(0.4, 1))
legend("bottomleft", legend = c("[0.4,0.9]", "(0.9,1]", "(1,1.2]", "(1.2,10.8]"), col = c('red', 'blue', 'black', 'green'), lty = 1:2, horiz = T, cex = 0.8)
mgus
table(mgus)
plot(mgus_death, col = c('red', 'blue'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of mgus', ylim=c(0.4, 1))
plot(mgus_death, col = c('red', 'blue'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of mgus', ylim=c(0.7, 1))
plot(mgus_death, col = c('red', 'blue'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of mgus', ylim=c(0.6, 1))
legend("bottomleft", legend = c(0,1), col = c('red', 'blue'), lty = 1:2, horiz = T, cex = 0.8)
legend("bottomleft", legend = c(0,1), col = c('red', 'blue'), lty = 1:2, horiz = T, cex = 1)
table(mgus)
table(chapter)
# age
age_quantile <- cut(age, quantile(age), include.lowest =  T)
# flc.gpr
flc.grp_death = univariate_km(flc.grp)
plot(flc.grp_death, col = c('red', 'blue', 'black', 'green', 'purple', 'red', 'blue', 'black', 'green', 'purple'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of flc.grp', ylim=c(0.2, 1))
legend("bottom", legend = c(1,2,3,4,5,6,7,8,9,10), col = c('red', 'blue', 'black', 'green', 'purple', 'red', 'blue', 'black', 'green', 'purple'), lty = 1:2, horiz = T, cex = 0.65)
table(flc.grp)
# sample.yr
sample.yr_death = univariate_km(sample.yr)
plot(sample.yr_death, col = c('red', 'blue', 'black', 'green', 'red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of sample.yr quantiles', ylim=c(0.60,1))
legend("bottomleft", legend = c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003 ), col = c('red', 'blue', 'black', 'green', 'red', 'blue', 'black', 'green'), lty = 1:2, horiz=T, cex = 0.6)
table(kappa)
cut(kappa, quantile(kappa), include.lowest =  T)
plot(sex_death, col = c('red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of kappa', ylim=c(0.65, 1))
legend("bottomleft", legend = c('M', 'F'), col = c('red', 'blue'), lty = 1:2, horiz = T)
cut(kappa, quantile(kappa), include.lowest =  T)
plot(sex_death, col = c('red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of kappa', ylim=c(0.65, 1))
legend("bottomleft", legend = c('[0.01,0.96]', '(0.96,1.27]', '(1.27,1.68]', '(1.68,20.5]'), col = c('red', 'blue', 'black', 'green'), lty = 1:2, horiz = T)
plot(kappa_death, col = c('red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of kappa', ylim=c(0.65, 1))
kappa_death = univariate_km(kappa_quantile)
plot(kappa_death, col = c('red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of kappa', ylim=c(0.65, 1))
# kappa
kappa_quantile = cut(kappa, quantile(kappa), include.lowest =  T)
kappa_death = univariate_km(kappa_quantile)
plot(kappa_death, col = c('red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of kappa', ylim=c(0.65, 1))
plot(kappa_death, col = c('red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of kappa', ylim=c(0.5, 1))
legend("bottomleft", legend = c('[0.01,0.96]', '(0.96,1.27]', '(1.27,1.68]', '(1.68,20.5]'), col = c('red', 'blue', 'black', 'green'), lty = 1:2, horiz = T, )
plot(kappa_death, col = c('red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of kappa', ylim=c(0.5, 1))
plot(kappa_death, col = c('red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of kappa', ylim=c(0.2, 1))
plot(kappa_death, col = c('red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of kappa', ylim=c(0.3, 1))
legend("bottomleft", legend = c('[0.01,0.96]', '(0.96,1.27]', '(1.27,1.68]', '(1.68,20.5]'), col = c('red', 'blue', 'black', 'green'), lty = 1:2, horiz = T )
legend("bottomleft", legend = c('[0.01,0.96]', '(0.96,1.27]', '(1.27,1.68]', '(1.68,20.5]'), col = c('red', 'blue', 'black', 'green'), lty = 1:2, horiz = T, cex = 0.4 )
legend("bottomleft", legend = c('[0.01,0.96]', '(0.96,1.27]', '(1.27,1.68]', '(1.68,20.5]'), col = c('red', 'blue', 'black', 'green'), lty = 1:2, horiz = T, cex = 0.6 )
legend("bottomleft", legend = c('[0.01,0.96]', '(0.96,1.27]', '(1.27,1.68]', '(1.68,20.5]'), col = c('red', 'blue', 'black', 'green'), lty = 1:2, horiz = T, cex = 0.7 )
legend("bottomleft", legend = c('[0.01,0.96]', '(0.96,1.27]', '(1.27,1.68]', '(1.68,20.5]'), col = c('red', 'blue', 'black', 'green'), lty = 1:2, horiz = T, cex = 0.8 )
plot(kappa_death, col = c('red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of kappa', ylim=c(0.3, 1))
legend("bottomleft", legend = c('[0.01,0.96]', '(0.96,1.27]', '(1.27,1.68]', '(1.68,20.5]'), col = c('red', 'blue', 'black', 'green'), lty = 1:2, horiz = T, cex = 0.8 )
# lambda
lambda_quantile = cut(lambda, quantile(lambda), include.lowest =  T)
lambda_quantile
# lambda
lambda_quantile = cut(lambda, quantile(lambda), include.lowest =  T)
lambda_death = univariate_km(lambda_quantile)
plot(lambda_death, col = c('red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of lambda', ylim=c(0.3, 1))
legend("bottomleft", legend = c('[0.04,1.2]', '(1.2,1.51]', '(1.51,1.92]', '(1.92,26.6]'), col = c('red', 'blue', 'black', 'green'), lty = 1:2, horiz = T, cex = 0.8 )
# flc.gpr
flc.grp_death = univariate_km(flc.grp) # log-rang diviso in prime 5 seconde 5
plot(flc.grp_death, col = c('red', 'blue', 'black', 'green', 'purple', 'red', 'blue', 'black', 'green', 'purple'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of flc.grp', ylim=c(0.2, 1))
legend("bottom", legend = c(1,2,3,4,5,6,7,8,9,10), col = c('red', 'blue', 'black', 'green', 'purple', 'red', 'blue', 'black', 'green', 'purple'), lty = 1:2, horiz = T, cex = 0.65)
# sex
sex_death = univariate_km(sex)
plot(sex_death, col = c('red', 'blue'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of sex', ylim=c(0.65, 1))
legend("bottomleft", legend = c('M', 'F'), col = c('red', 'blue'), lty = 1:2, horiz = T)
yt
### QUESTION 2
# Cox model
# binary covariate
surv_object = Surv(futime, death)
cox1 <- coxph(surv_object ~ death)
cox1 <- coxph(surv_object ~ death)
cox1
### QUESTION 2
# Cox model
# binary covariate
surv_object = Surv(futime, death)
cox1 <- coxph(formula = surv_object ~ sex)
cox1
# continuous covariate
cox2 <- coxph(datasurv ~ age)
cox2 # the harzard ratio increases by approx 9% for each additional year of age
# Cox model
# dicotomous covariate
cox1 <- coxph(datasurv ~ drug)
datasurv <- Surv(time, censor)
# Cox model
# dicotomous covariate
cox1 <- coxph(datasurv ~ drug)
cox1 # the last column is the p-val, in this case it is very small so we can say that the `coef` is significantly smaller than 0
# Cox model
# dicotomous covariate
cox1 <- coxph(datasurv ~ drug)
datasurv <- Surv(time, censor)
library(foreign)
HMO<-read.dta("hmohiv.dta")
class(HMO)
HMO<-read.dta("~/Desktop/DSA/Case studies/HIV/hmohiv.dta")
class(HMO)
str(HMO)
datasurv <- Surv(time, censor)
# Cox model
# dicotomous covariate
cox1 <- coxph(datasurv ~ drug)
cox1 # the last column is the p-val, in this case it is very small so we can say that the `coef` is significantly smaller than 0
# Cox model
# dicotomous covariate
cox1 <- coxph(datasurv ~ drug)
datasurv <- Surv(time, censor)
HMO<-read.dta("~/Desktop/DSA/Case studies/HIV/hmohiv.dta")
class(HMO)
str(HMO)
library(survival)
attach(HMO)
datasurv <- Surv(time, censor)
# Cox model
# dicotomous covariate
cox1 <- coxph(datasurv ~ drug)
cox1 # the last column is the p-val, in this case it is very small so we can say that the `coef` is significantly smaller than 0
### QUESTION 2
# Cox model
# binary covariate
surv_object = Surv(futime, death)
cox1 <- coxph(formula = surv_object ~ sex)
cox1
table(sex)
sex
### QUESTION 2
# Cox model
# binary covariate
surv_object = Surv(futime, death)
cox1 <- coxph(formula = surv_object ~ sex)
cox1 # we see a 9% increase
### QUESTION 2
# Cox model
# binary covariate
sex = ifelse(sex == 'M', 1, 0)
surv_object = Surv(futime, death)
cox1 <- coxph(formula = surv_object ~ sex)
cox1 # we see a 9% increase (chiediamo al prof quale livello si rifeisce)
library(survival)
data("flchain")
attach(flchain)
### QUESTION 2
# Cox model
# binary covariate
sex = ifelse(sex == 'M', 0, 1)
surv_object = Surv(futime, death)
cox1 <- coxph(formula = surv_object ~ sex)
cox1 # we see a 9% increase (chiediamo al prof quale livello si rifeisce)
sex
library(survival)
data("flchain")
attach(flchain)
### QUESTION 2
# Cox model
# binary covariate
sex = ifelse(sex == 'M', 0, 1)
surv_object = Surv(futime, death)
cox1 <- coxph(formula = surv_object ~ sex)
cox1 # we see a 9% increase (chiediamo al prof quale livello si rifeisce)
library(survival)
data("flchain")
attach(flchain)
### QUESTION 2
# Cox model
# binary covariate
sex = ifelse(sex == 'M', 1, 0)
surv_object = Surv(futime, death)
cox1 <- coxph(formula = surv_object ~ sex)
cox1 # we see a 9% increase (chiediamo al prof quale livello si rifeisce)
# continuous covariate
cox2 <- coxph(surv_object ~ age)
library(survival)
data("flchain")
attach(flchain)
### QUESTION 2
# Cox model
# binary covariate
sex = ifelse(sex == 'M', 1, 0)
surv_object = Surv(futime, death)
cox1 <- coxph(formula = surv_object ~ sex)
cox1 # we see a 9% increase (chiediamo al prof quale livello si rifeisce)
library(survival)
data("flchain")
attach(flchain)
library(survival)
data("flchain")
attach(flchain)
### QUESTION 2
# Cox model
# binary covariate
sex = ifelse(sex == 'M', 0, 1)
surv_object = Surv(futime, death)
cox1 <- coxph(formula = surv_object ~ sex)
cox1 # we see a 9% increase (chiediamo al prof quale livello si rifeisce)
library(survival)
data("flchain")
attach(flchain)
### QUESTION 2
# Cox model
# binary covariate
sex = ifelse(sex == 'M', 1, 0)
surv_object = Surv(futime, death)
cox1 <- coxph(formula = surv_object ~ sex)
cox1 # we see a 9% increase (chiediamo al prof quale livello si rifeisce)
library(survival)
data("flchain")
attach(flchain)
### QUESTION 2
# Cox model
# binary covariate
sex = ifelse(sex == 'M', 1, 0)
surv_object = Surv(futime, death)
cox1 <- coxph(formula = surv_object ~ sex)
cox1 # we see a 9% increase (chiediamo al prof quale livello si rifeisce)
library(survival)
data("flchain")
attach(flchain)
### QUESTION 2
# Cox model
# binary covariate
surv_object = Surv(futime, death)
cox1 <- coxph(formula = surv_object ~ sex)
cox1 # we see a 9% increase (chiediamo al prof quale livello si rifeisce)
library(foreign)
HMO<-read.dta("~/Desktop/DSA/Case studies/HIV/hmohiv.dta")
class(HMO)
str(HMO)
library(survival)
attach(HMO)
datasurv <- Surv(time, censor)
# Cox model
# dicotomous covariate
cox1 <- coxph(datasurv ~ drug)
cox1 # the last column is the p-val, in this case it is very small so we can say that the `coef` is significantly smaller than 0
library(survival)
data("flchain")
attach(flchain)
table(mgus)
### QUESTION 2
# Univariate Cox model
# binary covariate
surv_object = Surv(futime, death)
# since coef is > 0 we can state that males have 9% more risk of death
cox_mgus = coxph(formula = surv_object ~ mgus)
cox_mgus
quantile(age)
quantile(age)[-2]
# continuous covariate
cox_multi <- coxph(surv_object ~ sex + age_quantile)
# age
age_quantile <- cut(age, quantile(age), include.lowest =  T)
# continuous covariate
cox_multi <- coxph(surv_object ~ sex + age_quantile)
cox_multi
# continuous covariate
cox_multi <- coxph(surv_object ~ sex + age_quantile + kappa)
cox_multi
# continuous covariate
cox_multi <- coxph(surv_object ~ sex + age_quantile + sample.yr)
cox_multi
# continuous covariate
cox_multi <- coxph(surv_object ~ age + sex + kappa + lambda + flc.grp + )
cox_multi
# continuous covariate
cox_multi <- coxph(surv_object ~ age + sex + kappa + lambda + flc.grp)
cox_multi
# age
age_quantile <- cut(age, quantile(age), include.lowest =  T)
age_death = univariate_km(age_quantile)
plot(age_death, col = c('red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of age quantiles')
legend("bottomleft", legend = c("[50,55)", "[55,63)", "[63, 72)", "[72, 101)"), lty = 1:2, col = c('red', 'blue', 'black', 'green'))
# age
age_quantile <- cut(age, quantile(age), include.lowest =  T)
age_death = univariate_km(age_quantile)
plot(age_death, col = c('red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of age quantiles')
legend("bottomleft", legend = c("[50,55)", "[55,63)", "[63, 72)", "[72, 101)"), lty = 1:2, col = c('red', 'blue', 'black', 'green'))
# age
age_quantile <- cut(age, quantile(age), include.lowest =  T)
age_death = univariate_km(age_quantile)
univariate_km = function(var) {
surv_object <- Surv(futime, death)
result_km <- survfit(surv_object ~ var, conf.type = "log-log")
return(result_km)
}
# age
age_quantile <- cut(age, quantile(age), include.lowest =  T)
age_death = univariate_km(age_quantile)
plot(age_death, col = c('red', 'blue', 'black', 'green'), lty = 1:2, xlab = "follow up time", ylab = "estimated S(t)", main = 'Survival function as a function of age quantiles')
legend("bottomleft", legend = c("[50,55)", "[55,63)", "[63, 72)", "[72, 101)"), lty = 1:2, col = c('red', 'blue', 'black', 'green'))
# continuous covariate
cox_multi <- coxph(surv_object ~ age + sex + kappa + lambda + flc.grp + creatinine + )
# continuous covariate
cox_multi <- coxph(surv_object ~ age + sex + kappa + lambda + flc.grp + creatinine )
cox_multi
# continuous covariate
cox_multi <- coxph(surv_object ~ quantile_age + sex + kappa + lambda + flc.grp + creatinine )
# continuous covariate
cox_multi <- coxph(surv_object ~ age_quantile + sex + kappa + lambda + flc.grp + creatinine )
cox_multi
# continuous covariate
cox_multi <- coxph(surv_object ~ age + sex + kappa + lambda + flc.grp + creatinine )
cox_multi
# continuous covariate
cox_multi <- coxph(surv_object ~ age_quantile + sex + kappa + lambda + flc.grp + creatinine )
cox_multi
summary(cox_multi)
library(survival)
data("flchain")
library(survival)
data("flchain")
attach(flchain)
univariate_km = function(var) {
surv_object <- Surv(futime, death)
result_km <- survfit(surv_object ~ var, conf.type = "log-log")
return(result_km)
}
# age
age_quantile <- cut(age, quantile(age), include.lowest =  T)
# kappa
kappa_quantile = cut(kappa, quantile(kappa), include.lowest =  T)
# lambda
lambda_quantile = cut(lambda, quantile(lambda), include.lowest =  T)
# creatinine
creatinine_quanitle = cut(creatinine, quantile(creatinine, na.rm = T), include.lowest =  T)
# continuous covariate
cox_multi <- coxph(surv_object ~ age_quantile + sex + kappa_quantile + lambda_quantile + flc.grp + creatinine_quanitle + mgus)
### QUESTION 2
## Univariate Cox model
# binary covariate
surv_object = Surv(futime, death)
# continuous covariate
cox_multi <- coxph(surv_object ~ age_quantile + sex + kappa_quantile + lambda_quantile + flc.grp + creatinine_quanitle + mgus)
cox_multi
summary(cox_multi)
summary(cox_multi)
# variable selection (removing kappa and mgus)
cox_multi <- coxph(surv_object ~ age_quantile + sex + lambda_quantile + flc.grp + creatinine_quanitle)
# complete model
cox_multi <- coxph(surv_object ~ age_quantile + sex + kappa_quantile + lambda_quantile + flc.grp + creatinine_quanitle + mgus)
summary(cox_multi)
# variable selection (removing kappa and mgus)
cox_multi_1 <- coxph(surv_object ~ age_quantile + sex + lambda_quantile + flc.grp + creatinine_quanitle)
summary(cox_multi_1)
# changing the baseline (continuous covariate)
cox2b <- coxph(surv_object ~ I(age - 35))
lambda_quantile
lambda_quantile[-1]
lambda_quantile[-2]
cut(lambda, quantile(lambda)[-2], include.lowest = T)
summary(cox_multi_1)
cut(lambda, quantile(lambda)[-2], include.lowest = T)
lambda_quantile_1 = cut(lambda, quantile(lambda)[-2], include.lowest = T)
cox_multi_2 <- coxph(surv_object ~ age_quantile + sex + lambda_quantile_1 + flc.grp + creatinine_quanitle)
summary(cox_multi_2)
lambda_quantile_1 = cut(lambda, quantile(lambda)[-2,-3], include.lowest = T)
lambda_quantile_1 = cut(lambda, quantile(lambda)[-2:-3], include.lowest = T)
lambda_quantile_1
cox_multi_2 <- coxph(surv_object ~ age_quantile + sex + lambda_quantile_1 + flc.grp + creatinine_quanitle)
summary(cox_multi_2)
lambda_quantile_1
uantile(lambda)
quantile(lambda)
summary(cox_multi_2)
mfp
?mfp
libray(mfp)
library(mfp)
install.packages("mfp")
library(mfp)
library(mfp)
?fp
?tt
?tt
??tt
library(survival)
library(foreign)
?tt
